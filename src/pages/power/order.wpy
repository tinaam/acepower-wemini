
<template>
  <view class="page">
    <view class="page__hd">
      <view class="page__title">订单详情</view>
    </view>
    <view class="page__bd">
      <view wx:if="{{!loading}}">
        <view class="weui-form-preview">
          <view class="weui-form-preview__hd">
            <view class="weui-form-preview__item">
              <view class="weui-form-preview__label">付款金额</view>
              <view class="weui-form-preview__value_in-hd">{{total_incl_tax}}</view>
            </view>
          </view>
          <view class="weui-form-preview__bd">
            <view class="weui-form-preview__item">
              <view class="weui-form-preview__label">使用时长</view>
              <view class="weui-form-preview__value">{{unit_duration_min}} min</view>
            </view>
            <view class="weui-form-preview__item">
              <view class="weui-form-preview__label">地点</view>
              <view class="weui-form-preview__value">
              {{asset_location.line2}}
              </view>
            </view>
            <view class="weui-form-preview__item">
              <view class="weui-form-preview__label">设备号</view>
              <view class="weui-form-preview__value">
              {{asset_location.code}}
              </view>
            </view>
            <view class="weui-form-preview__item" wx:if="{{order}}">
              <view class="weui-form-preview__label">订单号</view>
              <view class="weui-form-preview__value">
              {{order.number}}
              </view>
            </view>
          </view>
        </view>
        <view class="weui-msg">
          <view class="weui-msg__opr-area">
              <view class="weui-btn-area">
                <button class="weui-btn" type="primary" @tap="checkout">支付</button>
              </view>
          </view>
        </view>
        <view class="weui-loadmore weui-loadmore_line" wx:if="{{order}}">
          <view class="weui-loadmore__tips weui-loadmore__tips_in-line" style="background-color:transparent;">
            请在 {{timeoutRemainSec}} sec 内完成支付
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<style>
</style>

<script>
  import wepy from 'wepy'
  import http from '../../mixins/http'
  import user from '../../mixins/user'
  import config from '../../config'

  export default class Order extends wepy.page {
    mixins = [http, user]
    config = {
      navigationBarTitleText: '支付'
    }
    data = {
      loading: true,
      total_incl_tax: 0.0,
      unit_duration_min: 45,
      asset_location: {},
      basket_id: -1,
      order: null,
      timeoutRemainSec: -1
    }
    computed = {}
    onLoad(params) {
      this.$ensureLogin()
        .then(() => {
          return this.$get({
            url: '/oscar/assetlocation/status',
            data: params
          })
        })
        .then(({data}) => {
          console.info('response', data)
          if (data.occupied) {
            let userId = this.$getTokenPayload().user_id
            // data.order.owner => "http://127.0.0.1:8090/api/v1/oscar/users/2/"
            let ownerId = data.order.owner.split('/')
            ownerId = parseInt(ownerId[ownerId.length - 2])
            if (userId === ownerId) {
              let orderId = data.order.url.split('/')
              orderId = parseInt(orderId[orderId.length - 2])
              if (data.order.status === 'Timeout') {
                // request a new basket and generate a new order
                return params
              } else if (data.order.status === 'Pending') {
                this.order = data.order
                this.order.id = orderId
                let basketId = data.order.basket.split('/')
                this.basket_id = parseInt(basketId[basketId.length - 2])
                this.total_incl_tax = data.order.total_incl_tax
                this.asset_location = data.order.lines[0].asset_location
                this.displayPaymentCountDown()
              } else {
                wepy.redirectTo({
                  url: `/pages/power/countdown?order_id=${orderId}`
                })
              }
            } else {
              wepy.showModal({
                title: '已被占用',
                content: '该设备已被占用，请稍后重试',
                showCancel: false
              }).then((res) => {
                wepy.switchTab({
                  url: '/pages/index'
                })
              })
            }
            return Promise.reject(Error('The device is occupied'))
          }
          return params
        }).then((params) => {
          let previewParams = Object.assign({unit_duration_min: this.unit_duration_min}, params)
          return this.$post({
            url: '/oscar/basket/preview',
            data: previewParams
          }).then(({data}) => {
            this.basket_id = data.id
            this.total_incl_tax = data.total_incl_tax
            this.asset_location = data.lines[0].asset_location
          }).catch(({statusCode, data}) => {
            let content = 'Unknonw error'
            switch (statusCode) {
              case 400:
                content = JSON.stringify(data)
                break
              default:
                content = data.detail
            }
            wepy.showModal({
              title: 'Error',
              content: content,
              showCancel: false
            }).then((res) => {
              wepy.switchTab({
                url: '/pages/index'
              })
            })
            console.error(status, data)
          })
        }).finally((res) => {
          wepy.hideLoading()
          this.loading = false
          // dont know why it mixin http does not work
          this.$apply()
        })
    }
    onReady() {
      if (this.loading) {
        wepy.showLoading({
          title: 'Loading...'
        })
      }
    }
    methods = {
      checkout () {
        this.placeOrder()
          .then((order) => {
            // launch_payment_request
            return this.$post({
              url: order.payment_url,
              baseUrl: config.domain
            })
          })
          .catch(() => {
            // launch_payment_failure
          })
          .finally(() => {
            wepy.hideLoading()
            this.loading = false
            this.$apply()
          })
          .then(({data}) => {
            // launch wx payment dialog
            console.info('launch wx payment dialog')
          })
      }
    }

    placeOrder () {
      if (this.order) {
        return Promise.resolve(this.order)
      }
      let params = {
        basket: `${config.baseUrl}/oscar/baskets/${this.basket_id}/`,
        total: this.total_incl_tax,
        shipping_method_code: 'count-down'
      }

      return this.$post({
        url: '/oscar/asset/checkout',
        data: params
      }).then(({data}) => {
        this.order = data
        this.displayPaymentCountDown()
        return data
      })
    }

    displayPaymentCountDown() {
      if (!this.order) {
        return
      }
      let datePlacedTs = new Date(this.order.date_placed).getTime()
      let timeoutSecsTs = this.order.countdown_secs * 1000
      let nowTs = new Date().getTime()
      if (datePlacedTs + timeoutSecsTs < nowTs) {
        wepy.showModal({
          title: '注意',
          content: '该订单已失效, 请重新下单',
          showCancel: false
        }).then((res) => {
          wepy.redirectTo({
            url: `/pages/power/order?sku_code=${this.order.lines[0].asset_location.code}`
          })
        })
      } else {
        this.timeoutRemainSec = Math.floor((timeoutSecsTs - nowTs + datePlacedTs) / 1000)
        this.$apply()
        setTimeout(() => {
          this.displayPaymentCountDown()
        }, 2000)
      }
    }
  }

</script>
